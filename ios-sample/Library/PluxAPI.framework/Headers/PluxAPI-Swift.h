#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
#ifndef PLUXAPI_SWIFT_H
#define PLUXAPI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PluxAPI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


@class NSString;

SWIFT_CLASS("_TtC7PluxAPI14PXBatteryEvent")
@interface PXBatteryEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CBCentralManager;
@class CBPeripheral;
@class NSNumber;

SWIFT_CLASS("_TtC7PluxAPI16PXBioPluxManager")
@interface PXBioPluxManager : NSObject <CBCentralManagerDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@end

@class PXDevice;
enum States : NSInteger;
@class PXDeviceProperties;
@class PXCommandErrorReply;
@class PXPluxFrame;

SWIFT_PROTOCOL("_TtP7PluxAPI24PXBioPluxManagerDelegate_")
@protocol PXBioPluxManagerDelegate <NSObject>
@optional
- (void)onDeviceFound:(PXDevice * _Nonnull)device;
- (void)onConnectionStateChanged:(PXDevice * _Nonnull)device state:(enum States)state;
- (void)didFailToConnectDevice:(PXDevice * _Nonnull)device;
- (void)onDeviceReady:(PXDevice * _Nonnull)device properties:(PXDeviceProperties * _Nonnull)properties;
- (void)onError:(PXDevice * _Nonnull)device error:(PXCommandErrorReply * _Nonnull)error;
- (void)onDataAvailable:(PXDevice * _Nonnull)device data:(PXPluxFrame * _Nonnull)data;
- (void)onEventAvailable:(PXDevice * _Nonnull)device event:(NSObject * _Nonnull)event;
- (void)onFileDataAvailable:(PXDevice * _Nonnull)device data:(NSArray<NSNumber *> * _Nonnull)data;
- (void)didBluetoothPoweredOff;
- (void)didBluetoothPoweredOn;
@end


SWIFT_CLASS("_TtC7PluxAPI27PXClockSynchronizationEvent")
@interface PXClockSynchronizationEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(uint8_t, PXCommandError, open) {
  PXCommandErrorCrcInvalid = 0x00,
  PXCommandErrorBadCommand = 0x01,
  PXCommandErrorNoSensor = 0x02,
  PXCommandErrorRead = 0x03,
  PXCommandErrorNumMaxSchedules = 0x04,
  PXCommandErrorBadStart = 0x05,
  PXCommandErrorBadDuration = 0x06,
  PXCommandErrorBadNumRepeats = 0x07,
  PXCommandErrorBadRepeat = 0x08,
  PXCommandErrorBadCmdOverlap = 0x09,
  PXCommandErrorBadBaseFreq = 0x0a,
  PXCommandErrorBadNumSensors = 0x0b,
  PXCommandErrorBadDivisor = 0x0c,
  PXCommandErrorBadChMask = 0x0d,
  PXCommandErrorSessionRunning = 0x0e,
  PXCommandErrorBadPort = 0x0f,
  PXCommandErrorBadParamIndex = 0x10,
  PXCommandErrorBadParamVal = 0x11,
  PXCommandErrorBadNumBlocks = 0x12,
  PXCommandErrorBadClass = 0x13,
  PXCommandErrorBadSerialNum = 0x14,
  PXCommandErrorBadStartAddr = 0x15,
  PXCommandErrorBadEndAddr = 0x16,
  PXCommandErrorBadTextSize = 0x17,
  PXCommandErrorSessionNotRunning = 0x18,
  PXCommandErrorBadTime = 0x19,
  PXCommandErrorIntMemory = 0x80,
  PXCommandErrorUnknowError = 0xff,
};


SWIFT_CLASS("_TtC7PluxAPI19PXCommandErrorReply")
@interface PXCommandErrorReply : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PXCommandIdentifier, open) {
  PXCommandIdentifierStart = 0,
  PXCommandIdentifierStop = 1,
  PXCommandIdentifierAddSchedule = 2,
  PXCommandIdentifierStopSchedule = 3,
  PXCommandIdentifierGetSchedules = 4,
  PXCommandIdentifierDelAllSchedules = 5,
  PXCommandIdentifierVersion = 6,
  PXCommandIdentifierDescription = 7,
  PXCommandIdentifierGetUId = 8,
  PXCommandIdentifierColor = 9,
  PXCommandIdentifierReset = 10,
  PXCommandIdentifierGetTime = 11,
  PXCommandIdentifierSetTime = 12,
  PXCommandIdentifierGetSDSize = 13,
  PXCommandIdentifierGetNBlocksWritten = 14,
  PXCommandIdentifierPauseFrameEvents = 15,
  PXCommandIdentifierResumeFrameEvents = 16,
  PXCommandIdentifierReadBlocks = 17,
  PXCommandIdentifierReadHeaderBlock = 18,
  PXCommandIdentifierDelSDCardSession = 19,
  PXCommandIdentifierGetSessions = 20,
  PXCommandIdentifierReplaySession = 21,
  PXCommandIdentifierGetBattery = 22,
  PXCommandIdentifierEraseSDCardSessions = 23,
  PXCommandIdentifierSetParameters = 24,
  PXCommandIdentifierGetParameters = 25,
  PXCommandIdentifierUnknown = 26,
};

typedef SWIFT_ENUM(NSInteger, PXCommandResponseType, open) {
  PXCommandResponseTypeCommandReply = 0,
  PXCommandResponseTypeCommandError = 1,
  PXCommandResponseTypeEvents = 2,
  PXCommandResponseTypeDataFrames = 3,
};


SWIFT_CLASS("_TtC7PluxAPI17PXDataFramesEvent")
@interface PXDataFramesEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PXReplaySessionParams;

SWIFT_PROTOCOL("_TtP7PluxAPI16PXDeviceDelegate_")
@protocol PXDeviceDelegate <NSObject>
@optional
- (void)onDataParsed:(BOOL)result response:(id _Nonnull)response;
- (void)onIncompleteData:(NSArray<NSNumber *> * _Nonnull)data;
- (void)onReplaySessionParamUpdate:(PXReplaySessionParams * _Nonnull)params;
- (void)onFileDataReceived:(NSArray<NSNumber *> * _Nonnull)fileData;
@end


SWIFT_CLASS("_TtC7PluxAPI8PXDevice")
@interface PXDevice : NSObject <CBPeripheralDelegate, PXDeviceDelegate>
- (void)onDataParsed:(BOOL)result response:(id _Nonnull)response;
- (void)onIncompleteData:(NSArray<NSNumber *> * _Nonnull)data;
- (void)onReplaySessionParamUpdate:(PXReplaySessionParams * _Nonnull)params;
- (void)onFileDataReceived:(NSArray<NSNumber *> * _Nonnull)fileData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CBService;
@class CBCharacteristic;
@class CBDescriptor;

@interface PXDevice (SWIFT_EXTENSION(PluxAPI))
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForDescriptor:(CBDescriptor * _Nonnull)descriptor error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForDescriptor:(CBDescriptor * _Nonnull)descriptor error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)parseReceivedDataFromCharacteristic:(CBCharacteristic * _Nonnull)characteristic;
@end


SWIFT_CLASS("_TtC7PluxAPI13PXDeviceColor")
@interface PXDeviceColor : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC7PluxAPI18PXDeviceIdentifier")
@interface PXDeviceIdentifier : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC7PluxAPI18PXDeviceProperties")
@interface PXDeviceProperties : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI12PXDeviceTime")
@interface PXDeviceTime : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PXDevicesPID, open) {
  PXDevicesPIDDeviceUnknown = 0,
  PXDevicesPIDBioPlux1 = 1,
  PXDevicesPIDBioSignalsPlux8ch = 2,
  PXDevicesPIDBioSignalsPlux4ch = 3,
  PXDevicesPIDBiosignalsHybrid8 = 4,
  PXDevicesPIDMotionPlux = 5,
  PXDevicesPIDOpenBan = 6,
  PXDevicesPIDFnirs = 7,
  PXDevicesPIDEe = 8,
  PXDevicesPIDUsbDataCable = 9,
  PXDevicesPIDGestureWatch = 10,
  PXDevicesPIDMuscleBan = 11,
  PXDevicesPIDBitalino1 = 12,
  PXDevicesPIDBitalino2 = 13,
  PXDevicesPIDScoliosis = 14,
  PXDevicesPIDHsatpro = 15,
  PXDevicesPIDMuscleBan2 = 16,
  PXDevicesPIDCardioBan = 17,
  PXDevicesPIDRespiBan = 18,
};


SWIFT_CLASS("_TtC7PluxAPI25PXDigitalInputChangeEvent")
@interface PXDigitalInputChangeEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI15PXGetParameters")
@interface PXGetParameters : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI13PXGetSessions")
@interface PXGetSessions : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PXLogLevel, open) {
  PXLogLevelNone = 0,
  PXLogLevelSimple = 1,
};


SWIFT_CLASS("_TtC7PluxAPI16PXNBlocksWritten")
@interface PXNBlocksWritten : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI18PXNetsensingDevice")
@interface PXNetsensingDevice : PXDevice
- (void)parseReceivedDataFromCharacteristic:(CBCharacteristic * _Nonnull)characteristic;
@end


SWIFT_CLASS("_TtC7PluxAPI12PXPluxDevice")
@interface PXPluxDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC7PluxAPI11PXPluxFrame")
@interface PXPluxFrame : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC7PluxAPI20PXReplaySessionEvent")
@interface PXReplaySessionEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI21PXReplaySessionParams")
@interface PXReplaySessionParams : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7PluxAPI8PXSDSize")
@interface PXSDSize : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI10PXSchedule")
@interface PXSchedule : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI21PXScheduleChangeEvent")
@interface PXScheduleChangeEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI11PXSchedules")
@interface PXSchedules : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI21PXSensorConfiguration")
@interface PXSensorConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI13PXSensorsInfo")
@interface PXSensorsInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI9PXSession")
@interface PXSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI13PXSessionInfo")
@interface PXSessionInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI20PXSimpleCommandReply")
@interface PXSimpleCommandReply : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7PluxAPI8PXSource")
@interface PXSource : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, States, open) {
  StatesNoConnection = 0,
  StatesListen = 1,
  StatesConnecting = 2,
  StatesConnected = 3,
  StatesAcquisition_trying = 4,
  StatesAcquisition_ok = 5,
  StatesAcquisition_stopping = 6,
  StatesDisconnected = 7,
  StatesEnded = 8,
};

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
